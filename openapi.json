{
  "openapi": "3.1.0",
  "info": {
    "title": "PMEi Memory API",
    "version": "1.0.8",
    "description": "Lawful, privacy-first memory shards for Dave/PMEi. Minimal and strict.\nEndpoints: /save_memory, /latest_memory, /get_memory, /privacy_filter, plus /health and /openapi.json."
  },
  "servers": [
    { "url": "https://www.philmirrorenginei.ai" }
  ],
  "components": {
    "securitySchemes": {
      "MemoryKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": { "type": "string", "enum": ["ok"] }
        },
        "required": ["status"]
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "error": { "type": "string" },
          "code": { "type": "string" },
          "request_id": { "type": "string" }
        },
        "required": ["error", "code", "request_id"]
      },
      "SaveMemoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_id": { "type": "string" },
          "thread_id": { "type": "string" },
          "slide_id": { "type": "string" },
          "glyph_echo": { "type": "string" },
          "drift_score": { "type": "number" },
          "seal": { "type": "string" },
          "content": { "type": "string" }
        },
        "required": ["user_id", "thread_id", "slide_id", "glyph_echo", "drift_score", "seal", "content"]
      },
      "SaveMemoryResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": { "type": "string", "enum": ["ok"] },
          "slide_id": { "type": "string" },
          "ts": { "type": "integer", "format": "int64" },
          "request_id": { "type": "string" }
        },
        "required": ["status", "slide_id", "ts", "request_id"]
      },
      "MemoryItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "user_id": { "type": "string" },
          "thread_id": { "type": "string" },
          "slide_id": { "type": "string" },
          "glyph_echo": { "type": "string" },
          "drift_score": { "type": "number" },
          "seal": { "type": "string" },
          "content": { "type": "string" },
          "ts": { "type": "integer", "format": "int64" }
        },
        "required": ["user_id", "thread_id", "slide_id", "glyph_echo", "drift_score", "seal", "content", "ts"]
      },
      "MemoryList": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/MemoryItem" },
        "maxItems": 200
      },
      "MaybeMemory": {
        "type": "object",
        "description": "Latest memory item, or {} when none.",
        "additionalProperties": false,
        "properties": {
          "user_id": { "type": "string" },
          "thread_id": { "type": "string" },
          "slide_id": { "type": "string" },
          "glyph_echo": { "type": "string" },
          "drift_score": { "type": "number" },
          "seal": { "type": "string" },
          "content": { "type": "string" },
          "ts": { "type": "integer", "format": "int64" }
        }
      },
      "PrivacyFilterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "content": { "type": "string" }
        },
        "required": ["content"]
      },
      "PrivacyFilterResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "filtered_content": { "type": "string" }
        },
        "required": ["filtered_content"]
      }
    }
  },
  "security": [
    { "MemoryKey": [] }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Service health",
        "operationId": "health_check",
        "security": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HealthResponse" }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Liveness check (alias for /health)",
        "operationId": "healthz",
        "security": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HealthResponse" }
              }
            }
          }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "Return this OpenAPI schema",
        "operationId": "openapi",
        "security": [],
        "responses": {
          "200": {
            "description": "Schema JSON",
            "content": {
              "application/json": {
                "schema": { "type": "object" }
              }
            }
          }
        }
      }
    },
    "/save_memory": {
      "post": {
        "summary": "Save a memory shard",
        "operationId": "save_memory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaveMemoryRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Saved",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaveMemoryResponse" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/latest_memory": {
      "get": {
        "summary": "Return the most recent memory or {}",
        "operationId": "get_latest_memory",
        "responses": {
          "200": {
            "description": "Latest memory (or empty object)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MaybeMemory" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/get_memory": {
      "get": {
        "summary": "List memories (newest first)",
        "operationId": "get_memory",
        "parameters": [
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 10, "minimum": 1, "maximum": 200 } },
          { "name": "user_id", "in": "query", "schema": { "type": "string" } },
          { "name": "thread_id", "in": "query", "schema": { "type": "string" } },
          { "name": "slide_id", "in": "query", "schema": { "type": "string" } },
          { "name": "glyph_echo", "in": "query", "schema": { "type": "string" } },
          { "name": "seal", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Array of memory items",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MemoryList" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    },
    "/privacy_filter": {
      "post": {
        "summary": "Filter sensitive/PII data before saving",
        "operationId": "privacy_filter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PrivacyFilterRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Filtered text returned",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivacyFilterResponse" }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          }
        }
      }
    }
  }
}
