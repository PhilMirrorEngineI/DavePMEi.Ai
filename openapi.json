{
  "openapi": "3.1.0",
  "info": {
    "title": "PMEi Memory API (Dave)",
    "version": "1.0.1",
    "description": "Secure, lawful memory shards for PhilMirrorEnginei.ai (PMEi)."
  },
  "servers": [
    { "url": "https://www.philmirrorenginei.ai" },
    { "url": "https://philmirrorenginei.ai" }
  ],
  "components": {
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "schemas": {
      "SaveMemoryRequest": {
        "type": "object",
        "properties": {
          "user_id": { "type": "string" },
          "thread_id": { "type": "string" },
          "slide_id": { "type": "string" },
          "glyph_echo": { "type": "string" },
          "drift_score": { "type": "number" },
          "seal": { "type": "string" },
          "content": { "type": "string" }
        },
        "required": [
          "user_id",
          "thread_id",
          "slide_id",
          "glyph_echo",
          "drift_score",
          "seal",
          "content"
        ],
        "additionalProperties": false
      },
      "MemoryItem": {
        "type": "object",
        "properties": {
          "user_id": { "type": "string" },
          "thread_id": { "type": "string" },
          "slide_id": { "type": "string" },
          "glyph_echo": { "type": "string" },
          "drift_score": { "type": "number" },
          "seal": { "type": "string" },
          "content": { "type": "string" },
          "ts": { "type": "integer", "description": "Unix timestamp (seconds)" }
        },
        "required": [
          "user_id",
          "thread_id",
          "slide_id",
          "glyph_echo",
          "drift_score",
          "seal",
          "content",
          "ts"
        ],
        "additionalProperties": false
      },
      "MemoryList": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/MemoryItem" }
      },
      "SaveMemoryResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "example": "saved" },
          "slide_id": { "type": "string" }
        },
        "required": ["status", "slide_id"],
        "additionalProperties": false
      },
      "LatestMemoryResponse": {
        "oneOf": [
          { "$ref": "#/components/schemas/MemoryItem" },
          { "type": "object", "additionalProperties": false }
        ],
        "description": "Either a MemoryItem or empty object when none exists."
      },
      "PrivacyFilterRequest": {
        "type": "object",
        "properties": {
          "content": { "type": "string" }
        },
        "required": ["content"],
        "additionalProperties": false
      },
      "PrivacyFilterResponse": {
        "type": "object",
        "properties": {
          "filtered_content": { "type": "string" }
        },
        "required": ["filtered_content"],
        "additionalProperties": false
      }
    }
  },
  "security": [{ "ApiKey": [] }],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "operationId": "health_check",
        "security": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Liveness check",
        "operationId": "healthz",
        "security": [],
        "responses": {
          "200": { "description": "OK" }
        }
      }
    },
    "/save_memory": {
      "post": {
        "summary": "Save a memory shard",
        "operationId": "save_memory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaveMemoryRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Memory saved",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaveMemoryResponse" }
              }
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized (missing or invalid API key)" }
        }
      }
    },
    "/latest_memory": {
      "get": {
        "summary": "Return the most recent memory or {}",
        "operationId": "get_latest_memory",
        "responses": {
          "200": {
            "description": "Latest memory (or empty object)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LatestMemoryResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/get_memory": {
      "get": {
        "summary": "Return a list of memories (newest first)",
        "operationId": "get_memory",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of memory items",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MemoryList" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/privacy_filter": {
      "post": {
        "summary": "Filter sensitive/PII data from input before saving",
        "operationId": "privacy_filter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PrivacyFilterRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Filtered text returned",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivacyFilterResponse" }
              }
            }
          },
          "400": { "description": "Bad request" }
        }
      }
    }
  }
}
