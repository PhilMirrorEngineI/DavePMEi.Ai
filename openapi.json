{
  "openapi": "3.1.0",
  "info": {
    "title": "PMEi Memory API",
    "version": "1.0.2",
    "description": "Secure, lawful memory shards for Dave/PMEi. Minimal, strict, privacy-first."
  },
  "servers": [
    { "url": "https://philmirrorenginei.ai" }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "schemas": {
      "SaveMemoryRequest": {
        "type": "object",
        "properties": {
          "user_id":     { "type": "string" },
          "thread_id":   { "type": "string" },
          "slide_id":    { "type": "string" },
          "glyph_echo":  { "type": "string" },
          "drift_score": { "type": "number" },
          "seal":        { "type": "string" },
          "content":     { "type": "string" }
        },
        "required": ["user_id","thread_id","slide_id","glyph_echo","drift_score","seal","content"],
        "additionalProperties": false
      },
      "MemoryItem": {
        "type": "object",
        "properties": {
          "user_id":     { "type": "string" },
          "thread_id":   { "type": "string" },
          "slide_id":    { "type": "string" },
          "glyph_echo":  { "type": "string" },
          "drift_score": { "type": "number" },
          "seal":        { "type": "string" },
          "content":     { "type": "string" },
          "ts":          { "type": "integer", "description": "Unix seconds" }
        },
        "required": ["user_id","thread_id","slide_id","glyph_echo","drift_score","seal","content","ts"],
        "additionalProperties": false
      },
      "MemoryList": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/MemoryItem" }
      },
      "SaveMemoryResponse": {
        "type": "object",
        "properties": {
          "status":   { "type": "string", "example": "ok" },
          "slide_id": { "type": "string" },
          "ts":       { "type": "integer" },
          "request_id": { "type": "string" }
        },
        "required": ["status","slide_id","ts","request_id"],
        "additionalProperties": false
      },
      "LatestMemoryResponse": {
        "oneOf": [
          { "$ref": "#/components/schemas/MemoryItem" },
          { "type": "object", "additionalProperties": false }
        ],
        "description": "Either a MemoryItem or {} when none exists."
      },
      "PrivacyFilterRequest": {
        "type": "object",
        "properties": { "content": { "type": "string" } },
        "required": ["content"],
        "additionalProperties": false
      },
      "PrivacyFilterResponse": {
        "type": "object",
        "properties": { "filtered_content": { "type": "string" } },
        "required": ["filtered_content"],
        "additionalProperties": false
      }
    }
  },
  "security": [{ "ApiKeyAuth": [] }],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "operationId": "health_check",
        "security": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Kubernetes-style liveness probe",
        "operationId": "healthz",
        "security": [],
        "responses": {
          "200": { "description": "OK" }
        }
      }
    },
    "/openapi.json": {
      "get": {
        "summary": "Return this OpenAPI specification",
        "operationId": "get_openapi",
        "security": [],
        "responses": {
          "200": {
            "description": "OpenAPI spec"
          }
        }
      }
    },
    "/save_memory": {
      "post": {
        "summary": "Save a compressed memory shard",
        "operationId": "save_memory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SaveMemoryRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Memory saved",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SaveMemoryResponse" }
              }
            }
          },
          "400": { "description": "Invalid payload" },
          "401": { "description": "Unauthorized (bad/missing X-API-KEY)" }
        }
      }
    },
    "/latest_memory": {
      "get": {
        "summary": "Return the most recent memory or {}",
        "operationId": "get_latest_memory",
        "responses": {
          "200": {
            "description": "Latest memory",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LatestMemoryResponse" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/get_memory": {
      "get": {
        "summary": "Return a list of memories (newest first)",
        "operationId": "get_memory",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10, "minimum": 1, "maximum": 200 }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of memory items",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MemoryList" }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/privacy_filter": {
      "post": {
        "summary": "Filter sensitive/PII data before saving",
        "operationId": "privacy_filter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PrivacyFilterRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Filtered content",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PrivacyFilterResponse" }
              }
            }
          },
          "400": { "description": "Invalid payload" }
        }
      }
    }
  }
}
